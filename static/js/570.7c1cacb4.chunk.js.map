{"version":3,"file":"static/js/570.7c1cacb4.chunk.js","mappings":"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","sources":["CalcPage/CalcPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Alert } from '@mui/material';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Button from '@mui/material/Button';\r\nimport { AnyAction, Dispatch } from \"@reduxjs/toolkit\";\r\n\r\nimport { RootState } from '../store/store';\r\nimport {\r\n    addition,\r\n    division,\r\n    multiplication,\r\n    subtraction,\r\n} from '../store/CalcSlice';\r\nimport './CalcPage.scss';\r\nimport { CalcState } from \"../AppTypes/AppTypes\";\r\nimport '../App.scss';\r\n/** \r\nconst getStars = (num: any): number[] => {\r\n    let fullStars=Math.floor(num);\r\n    let rounding = num -  Math.floor(num) > 0 && num -  Math.floor(num) < .5   ? .5 : 1;\r\n    fullStars = fullStars + rounding;\r\n    let emptyStars=5.0 - fullStars\r\n\r\n    \r\n    return [fullStars ,emptyStars]\r\n}\r\n\r\nconsole.log('GETSTARS',getStars(4.4))\r\nconsole.log('GETSTARS',getStars(4.7))\r\nconsole.log('GETSTARS',getStars(2.36))\r\n**/\r\n// Simple FC to display and dispatch actions using the Redux pattern and includes a redux-thunk side effect\r\n//  of loading the API data after an arithmatic operation takes place.\r\nconst CalcPage = () => {\r\n    const [firstValue, setFirstValue] = useState<number>(0);\r\n    const [secondValue, setSecondValue] = useState<number>(0);\r\n    const calcValues: CalcState = useSelector((state: RootState) => state.calc);\r\n    const dispatch: Dispatch<AnyAction> = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // add the new message to state\r\n        setFirstValue(calcValues.firstValue);\r\n        setSecondValue(calcValues.secondValue);\r\n    },\r\n        [calcValues.firstValue, calcValues.secondValue]);\r\n\r\n    return (\r\n        <div >\r\n            <h1>Redux</h1>\r\n            First Value :{' '}\r\n            <input onChange={event => setFirstValue(Number(event.target.value))} value={firstValue === 0 ? '' : firstValue}\r\n                type=\"number\"\r\n            />\r\n            <br />\r\n            <br />\r\n            Second Value :{' '}\r\n            <input\r\n                onChange={event => setSecondValue(Number(event.target.value))} value={secondValue === 0 ? '' : secondValue}\r\n                type=\"number\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <span className='button-space'>\r\n                <Button className='button-space' variant=\"contained\" onClick={() => dispatch(addition({ firstValue, secondValue }))}>\r\n                    Addition\r\n                </Button>\r\n            </span>\r\n            <span className='button-space'>\r\n                <Button className='button-space' variant=\"outlined\" onClick={() => dispatch(division({ firstValue, secondValue }))}>\r\n                    Division\r\n                </Button>\r\n            </span>\r\n            <span className='button-space'>\r\n                <Button className='button-space' variant=\"contained\"\r\n                    onClick={() => dispatch(multiplication({ firstValue, secondValue }))}\r\n                >\r\n                    Multiplication\r\n                </Button>\r\n            </span>\r\n            <span className='button-space'>\r\n                <Button className='button-space' variant=\"outlined\"\r\n                    onClick={() => dispatch(subtraction({ firstValue, secondValue }))}\r\n                >\r\n                    Subtraction\r\n                </Button>\r\n            </span>\r\n            <hr />\r\n            {calcValues.total ?\r\n                <h4 className='calc__answer'>{calcValues.firstValue} {calcValues.lastOperation} {calcValues.secondValue} = {calcValues.total}</h4>\r\n                : <></>\r\n            }\r\n            {calcValues?.articles?.length ? <h5>Side Effect Middleware (Redux Thunk)</h5> : <></>\r\n            }\r\n            {\r\n                calcValues.is_loading ? <Alert severity=\"info\">Loading...</Alert> : null\r\n            }\r\n            {calcValues?.articles?.map((art,i) =>\r\n                <Accordion className='calc__accordion'\r\n                key={`acc-${i}`+art.title.substring(0, 10)}\r\n                >\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id={art.title.substring(0, 10)}\r\n                        key={'as'+art.title.substring(0, 10)}\r\n                    >\r\n                        <Typography key={'t' + art.title.substring(0, 10)}\r\n                        >{art.title.substring(0, 150)}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                        key={'d' + art.title.substring(0, 10)}\r\n                    >\r\n                        <Typography\r\n                            key={'t2' + art.title.substring(0, 10)}\r\n\r\n                        >\r\n                            <>\r\n                                <span className='calc__accordion__details__text-section'\r\n                                >{art.description}</span>\r\n                                {art?.img ? <img alt={art.description.substring(0, 20)} className='calc__accordion__details__image' src={art?.img} /> : <></>}\r\n                            </>\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            )}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CalcPage;\r\n"],"names":["_calcValues$articles","_calcValues$articles2","_useState","useState","_useState2","_slicedToArray","firstValue","setFirstValue","_useState3","_useState4","secondValue","setSecondValue","calcValues","useSelector","state","calc","dispatch","useDispatch","useEffect","_jsxs","children","_jsx","onChange","event","Number","target","value","type","className","Button","variant","onClick","addition","division","multiplication","subtraction","total","lastOperation","_Fragment","articles","length","is_loading","Alert","severity","map","art","i","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","id","title","substring","Typography","AccordionDetails","description","img","alt","src","concat"],"sourceRoot":""}