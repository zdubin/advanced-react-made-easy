{"version":3,"file":"static/js/228.314b2397.chunk.js","mappings":"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","sources":["EchoHooks/EchoHooks.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, MutableRefObject } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport '../App.scss';\r\nimport './EchoHooks.scss';\r\nconst EchoHooks = () => {\r\n\r\n  const [messages, setMessages] = useState<string[]>([]);\r\n  const [sentMessages, setSentMessages] = useState<string[]>([]);\r\n  // const [connection,setConnection] = useState(null);\r\n  const timerid: { current: NodeJS.Timeout | string | number | undefined } = useRef('');\r\n  const tmp_connection = useRef<WebSocket | null>(null)\r\n\r\n\r\n  //const tmp_messages=useRef(null);\r\n  //tmp_messages.current = [];\r\n  const [message, setMessage] = useState<string>('');\r\n  const [sentMessage, setSentMessage] = useState<string>('');\r\n\r\n\r\n  //  const [count, setCount] = useState(0);\r\n  //  const incrementCount = () => setCount(count + 1);\r\n  const clearSocket = () => {\r\n    clearInterval(timerid.current);\r\n    tmp_connection?.current?.close();\r\n  }\r\n  const sendSocket2Secs = () => {\r\n    timerid.current = setInterval(() => {\r\n      const browser: string = navigator.userAgent.search('Chrome') != -1 ? 'Chrome' : 'FireFox';\r\n      const message: string = `Zvi Dubin: ${Math.random()}: ${new Date().toISOString()}: ${browser}`;\r\n      tmp_connection?.current?.send(message);\r\n      setSentMessage(message);\r\n    }, 2000);\r\n  }\r\n  const openSock = () => {\r\n    /// Please set up a local web socket server from this page: https://www.lob.com/blog/websocket-org-is-down-here-is-an-alternative\r\n    /// or you can try ('wss://socketsbay.com/wss/v2/1/demo/');\r\n    tmp_connection.current = new WebSocket('ws://localhost:10000');  /// ('wss://socketsbay.com/wss/v2/1/demo/');\r\n    tmp_connection.current.onopen = () => console.log(\"ws opened\");\r\n    tmp_connection.current.onclose = () => setMessage(\"ws closed\");\r\n    tmp_connection.current.onerror = error =>  setMessage(JSON.stringify(error));\r\n\r\n    tmp_connection.current.onmessage = evt => {\r\n      // add the new message to state\r\n      setMessage(evt.data);\r\n    };\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n  //  openSock();\r\n    return () => clearSocket();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // add the new message to state\r\n    setMessages([...messages, message].filter(mes => mes.substring(0, 3) === 'Zvi').slice(-5));\r\n    console.log(messages);\r\n  },\r\n    [message]);\r\n\r\n  useEffect(() => {\r\n    // add the new message to state\r\n    setSentMessages([...sentMessages, sentMessage].slice(-5));\r\n    console.log(sentMessages);\r\n  },\r\n    [sentMessage]);\r\n\r\n  return <div>\r\n    <span className='button-space'>\r\n      <Button className='button-space' variant=\"outlined\" onClick={clearSocket}>Close WebSocket & Auto Send</Button>\r\n    </span>\r\n    <span className='button-space'>\r\n      <Button className='button-space' variant=\"contained\" onClick={() => clearInterval(timerid.current)}>Clear Timer</Button>\r\n    </span>\r\n\r\n    <span className='button-space'>\r\n      <Button className='button-space' variant=\"outlined\" onClick={() => {\r\n        clearInterval(timerid.current);\r\n        openSock();\r\n        sendSocket2Secs();\r\n      }}>Send Socket every 2 Sec</Button>\r\n    </span>\r\n    <h2>Sent Messages</h2>\r\n    <div className='echo-hooks curved-edges echo-hooks__section echo-hooks__section--sent'>\r\n      <ol >{sentMessages.map((msg, idx) => msg ? <li key={'msgs-' + idx}>{msg}</li> : null)}</ol>\r\n    </div>\r\n    <h2>Received Messages</h2>\r\n    <div className='echo-hooks curved-edges echo-hooks__section echo-hooks__section--received'>\r\n\r\n      <ol >{messages.map((msg, idx) => <li key={'msgr-' + idx}>{msg}</li>)}</ol>\r\n    </div>\r\n  </div>\r\n\r\n\r\n}\r\nexport default EchoHooks;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","sentMessages","setSentMessages","timerid","useRef","tmp_connection","_useState5","_useState6","message","setMessage","_useState7","_useState8","sentMessage","setSentMessage","clearSocket","_tmp_connection$curre","clearInterval","current","close","useEffect","concat","_toConsumableArray","filter","mes","substring","slice","console","log","_jsxs","children","_jsx","className","Button","variant","onClick","WebSocket","onopen","onclose","onerror","error","JSON","stringify","onmessage","evt","data","setInterval","_tmp_connection$curre2","browser","navigator","userAgent","search","Math","random","Date","toISOString","send","map","msg","idx"],"sourceRoot":""}