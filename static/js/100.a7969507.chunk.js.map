{"version":3,"file":"static/js/100.a7969507.chunk.js","mappings":"iPAQMA,GAAQC,EAAAA,EAAAA,GAAO,qBAAqBC,MAAM,KAInCC,EAAwC,SAAHC,GAA2DA,EAArDC,SAAsD,IAC1GC,GAA0BC,EAAAA,EAAAA,UAAiB,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,UAAiB,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAgCT,EAAAA,EAAAA,UAAiB,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAoCb,EAAAA,EAAAA,UAAiB,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAhDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAgCjB,EAAAA,EAAAA,UAAiB,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,IAE5BG,EAAAA,EAAAA,YAAU,WACNT,EAAYT,EAChB,GAAG,CAACA,KAEJkB,EAAAA,EAAAA,YAAU,WACNL,EAAcT,EAClB,GAAG,CAACA,IAuBJ,OACIe,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,CAAC,WAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACH,UAAU,cAAcI,GAAIxB,IAAUQ,EAAU,cAAY,QAAOa,SAAErB,OACvGgB,GAAWG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,YAAUL,EAAS,OAAU,MAC3EG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,CAAC,aAASC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACH,UAAU,cAAcI,GAAIpB,IAAYQ,EAAY,cAAY,UAASS,UAACC,EAAAA,EAAAA,KAAA,QAAAD,SAAOjB,aAE1HkB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAEnB/B,EAASmC,KAAI,SAACC,EAAGC,GAAC,OAAKL,EAAAA,EAAAA,KAAA,OAAKF,UAAW,CAAC,IAAI,KAAKQ,SAASF,GAAK,uBAAyB,UAA6BG,QAAS,WACtHH,GAAK,KAAOA,GAAK,IACjBrB,EAAW,GAAKD,EAAU0B,OAAOJ,IAE5B,CAAC,IAAK,IAAK,IAAK,KAAKE,SAASF,GACnCT,EAAYS,GAED,MAANA,GACLzB,EAAS,GACTI,EAAW,GACXY,EAAY,KAED,MAANS,EACLrB,GAA8B,EAAnByB,OAAO1B,IAEP,MAANsB,GA7CX,WACd,OAAQV,GACJ,IAAK,IACDf,EAAS6B,OAAO1B,GAAW0B,OAAO9B,IAClCK,EAAW,GACX,MACJ,IAAK,IACDJ,EAAS6B,OAAO9B,GAAS8B,OAAO1B,IAChCC,EAAW,GACX,MACJ,IAAK,IACDJ,EAAS6B,OAAO1B,GAAW0B,OAAO9B,IAClCK,EAAW,GACX,MACJ,IAAK,IACDJ,EAAS6B,OAAO9B,GAAS8B,OAAO1B,IAChCC,EAAW,GAEnBY,EAAY,GAEhB,CA0BwBc,EAGR,EACCV,SACCK,GAAC,GAAAM,OArBwGN,EAAC,KAAAM,OAAIL,GAqBtG,QAK9B,EACA,G","sources":["Calculator/Calculator.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport React from 'react';\r\nimport { Fade } from \"reactstrap\"\r\n\r\nimport { CalculatorProps } from '../AppTypes/AppTypes'\r\nimport '../App.scss';\r\nimport './Calculator.scss';\r\n\r\nconst calcKeys = [...\"+-*/01234567890CR=\".split('')];\r\n\r\n\r\n\r\nexport const Calculator: React.FC<CalculatorProps> = ({ darkmode = false }: CalculatorProps): JSX.Element => {\r\n    const [total, setTotal] = useState<number>(0);\r\n    const [current, setCurrent] = useState<number>(0);\r\n    const [oldTotal, setOldTotal] = useState<number>(0);\r\n    const [oldCurrent, setOldCurrent] = useState<number>(0);\r\n    const [stagedOp, setStagedOp] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        setOldTotal(total);\r\n    }, [total]);\r\n\r\n    useEffect(() => {\r\n        setOldCurrent(current);\r\n    }, [current]);\r\n\r\n    const performOp = () => {\r\n        switch (stagedOp) {\r\n            case '+':\r\n                setTotal(Number(current) + Number(total));\r\n                setCurrent(0);\r\n                break;\r\n            case '-':\r\n                setTotal(Number(total) - Number(current));\r\n                setCurrent(0);\r\n                break;\r\n            case '*':\r\n                setTotal(Number(current) * Number(total));\r\n                setCurrent(0);\r\n                break;\r\n            case '/':\r\n                setTotal(Number(total) / Number(current));\r\n                setCurrent(0);\r\n        }\r\n        setStagedOp('');\r\n\r\n    }\r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"calcbox total-box\">\r\n                <div className=\"item\">Total: <Fade className='fade-inline' in={total === oldTotal} data-testid='total'>{total}</Fade></div>\r\n                {stagedOp ? <div className=\"staged-operation\"> Staged: {stagedOp} </div> : null}\r\n                <div className=\"item\">Current: <Fade className='fade-inline' in={current === oldCurrent} data-testid='current'><span>{current}</span></Fade></div>\r\n            </div>\r\n            <div className=\"calculator\" >\r\n                {\r\n                    calcKeys.map((k, i) => <div className={['=','R'].includes(k) ? \"calcbox wide-buttons\" : \"calcbox\"} key={`${k}-${i}`} onClick={() => {\r\n                        if (k >= '0' && k <= '9') {\r\n                            setCurrent(10 * current + Number(k));\r\n                        }\r\n                        else if (['+', '-', '*', '/'].includes(k)) {\r\n                            setStagedOp(k);\r\n                        }\r\n                        else if (k === 'C') {\r\n                            setTotal(0);\r\n                            setCurrent(0);\r\n                            setStagedOp('');\r\n                        }\r\n                        else if (k === 'R') {\r\n                            setCurrent(Number(current) * -1);\r\n                        }\r\n                        else if (k === '=') {\r\n                            performOp();\r\n                        }\r\n\r\n                    }\r\n                    }\r\n                    >{k}</div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Calculator;"],"names":["calcKeys","_toConsumableArray","split","Calculator","_ref","darkmode","_useState","useState","_useState2","_slicedToArray","total","setTotal","_useState3","_useState4","current","setCurrent","_useState5","_useState6","oldTotal","setOldTotal","_useState7","_useState8","oldCurrent","setOldCurrent","_useState9","_useState10","stagedOp","setStagedOp","useEffect","_jsxs","className","children","_jsx","Fade","in","map","k","i","includes","onClick","Number","performOp","concat"],"sourceRoot":""}