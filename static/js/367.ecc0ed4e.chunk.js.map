{"version":3,"file":"static/js/367.ecc0ed4e.chunk.js","mappings":"2MAKaA,EAAoH,SAAHC,GAAsD,IAAhDC,EAAGD,EAAHC,IAAKC,EAAMF,EAANE,OAAQC,EAASH,EAATG,UAAWC,EAAMJ,EAANI,OAAQC,EAAQL,EAARK,SAEhK,OAAOC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACO,OAATL,QAAS,IAATA,EAAAA,EAAeC,IAC+H,MAA3IE,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAAC,wBAAAC,OAAuBT,EAAG,KAAAS,OAAIR,GAAUS,UAAU,eAAeC,QAAQ,YAAYC,QAAS,kBAAMR,GAAU,EAACG,SAAE,YAIrI,ECsEA,EAzE4B,WACxB,IAAMM,EAA2B,CAC7B,CAAC,KAAM,KAAM,MACb,CAAC,KAAM,KAAM,MACb,CAAC,KAAM,KAAM,OAGjBC,ECdG,WACH,IAAAC,GAA0BC,EAAAA,EAAAA,UAAiB,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAItB,MAAO,CAHa,WAAH,OAAcE,EAAQ,IAAM,EAAI,IAAM,GAAI,EACvC,WAAH,OAAcC,EAASD,EAAM,EAAG,EAGrD,CDQiEE,GAASC,GAAAJ,EAAAA,EAAAA,GAAAJ,EAAA,GAA/DS,EAAWD,EAAA,GAAEE,EAAWF,EAAA,GAC/BP,GAA0BC,EAAAA,EAAAA,UAAQ,GAAAP,OAC1BI,IAAYI,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GADbU,EAAKR,EAAA,GAAES,EAAQT,EAAA,GAEtBU,GAA4CX,EAAAA,EAAAA,UAA4B,MAAKY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAAtEE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GASlCG,GAAkBC,EAAAA,EAAAA,cAAY,WAEhC,GAAIP,EAAM,GAAG,IAAOA,EAAM,GAAG,IAAMA,EAAM,GAAG,KAAOA,EAAM,GAAG,IAAMA,EAAM,GAAG,KAAOA,EAAM,GAAG,GACvF,MAAO,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC3B,GAAIA,EAAM,GAAG,IAAMA,EAAM,GAAG,KAAOA,EAAM,GAAG,IAAMA,EAAM,GAAG,KAAOA,EAAM,GAAG,GAC5E,MAAO,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAEhC,IAAK,IAAIQ,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIR,EAAMQ,GAAG,IAAMR,EAAMQ,GAAG,KAAOR,EAAMQ,GAAG,IAAMR,EAAMQ,GAAG,KAAOR,EAAMQ,GAAG,GACvE,MAAO,CAAC,CAACA,EAAG,GAAI,CAACA,EAAG,GAAI,CAACA,EAAG,IAIpC,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIT,EAAM,GAAGS,IAAMT,EAAM,GAAGS,KAAOT,EAAM,GAAGS,IAAMT,EAAM,GAAGS,KAAOT,EAAM,GAAGS,GACvE,MAAO,CAAC,CAAC,EAAGA,GAAI,CAAC,EAAGA,GAAI,CAAC,EAAGA,IAGpC,OAAO,IACX,GAAG,CAACT,KAEJU,EAAAA,EAAAA,YAAU,WACNL,EAAkBC,EACtB,GAAG,CAACA,IAEJ,IAAM5B,GAAS6B,EAAAA,EAAAA,cAAY,WACvB,OAAOH,EAAiBJ,EAAMI,EAAe,GAAG,IAAIA,EAAe,GAAG,IAAM,IAChF,GAAG,CAACJ,EAAOI,IAELO,GAAiBC,EAAAA,EAAAA,UAAqB,kBAAMlC,GAAQ,GAAE,CAACA,IAG7D,OACImC,EAAAA,EAAAA,MAAAhC,EAAAA,SAAA,CAAAC,SAAA,CACK6B,GAAiBE,EAAAA,EAAAA,MAAA,MAAA/B,SAAA,CAAI,MAAI6B,EAAe,aACrCE,EAAAA,EAAAA,MAAA,MAAI,cAAY,OAAM/B,SAAA,CAAC,QAAMgB,QAEjClB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,aAAYH,SAEnBkB,EAAMc,KAAI,SAACvC,EAAKiC,GAAC,OACbjC,EAAIuC,KAAI,SAACC,EAAGN,GAAC,OAAK7B,EAAAA,EAAAA,KAAA,OAA4B,qBAAAI,OAAoBwB,EAAC,KAAAxB,OAAIyB,GACnExB,UAAyB,OAAdmB,QAAc,IAAdA,GAAAA,EAAgBY,MAAK,SAAA1C,GAAA,IAAA2C,GAAAxB,EAAAA,EAAAA,GAAAnB,EAAA,GAAE4C,EAACD,EAAA,GAAEE,EAACF,EAAA,UAAMC,IAAMV,GAAKW,IAAMV,CAAC,IAAI,mBAAqB,MAAM3B,UAC7FF,EAAAA,EAAAA,KAACP,EAAI,CAACE,IAAKiC,EAAGhC,OAAQiC,EAAGhC,UAAWuB,EAAMQ,GAAGC,GAAI9B,SAAU,kBAjDlE,SAACyC,EAAa7C,GAC3B,IAAM8C,GAASC,EAAAA,EAAAA,GAAOtB,GACtBqB,EAAUD,GAAK7C,GAAOuB,IACtBC,IACAE,EAASoB,EACb,CA4CyF1C,CAAS6B,EAAGC,EAAE,EAAE/B,OAAQ,kBAAMiC,CAAc,KAAI,OAAA3B,OAFlFwB,EAAC,KAAAxB,OAAIyB,GAGlC,GACL,OAKb7B,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACE,UAAU,eAAesC,MAAM,UAAUpC,QAAS,kBAAMc,EAAS,GAADjB,OAAKI,GAAY,EACxFN,SAAC,YAGd,C","sources":["TicTacToe/Spot.tsx","TicTacToe/TicTacToe.tsx","CustomHooks/useXorO.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { XorO } from '../AppTypes/AppTypes'\r\nimport { Button } from \"reactstrap\";\r\n\r\nexport const Spot: React.FC<{ row: number, column: number, spotValue: XorO, didWin: () => XorO | null, setPiece: () => void }> = ({ row, column, spotValue, didWin, setPiece }) => {\r\n\r\n    return <>\r\n        {spotValue ?? (!didWin() ?\r\n            <Button data-testid={`square-${row}-${column}`} className='button-space' variant=\"contained\" onClick={() => setPiece()} >Select</Button> : null\r\n        )\r\n        }\r\n    </>\r\n}\r\n","import React, { useCallback, useMemo, useState, useEffect } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport { useXorO } from \"../CustomHooks/useXorO\";\r\nimport { XorO } from '../AppTypes/AppTypes'\r\nimport { Spot } from './Spot';\r\nimport './TicTacToe.scss';\r\n\r\ntype BoardSquares = XorO[][];\r\n\r\nconst TicTacToe: React.FC = () => {\r\n    const emptyBoard: BoardSquares = [\r\n        [null, null, null],\r\n        [null, null, null],\r\n        [null, null, null]\r\n    ];\r\n\r\n    const [currentXorO, setNextMove]: [() => XorO, () => void] = useXorO();\r\n    const [board, setBoard] = useState<BoardSquares>(\r\n        [...emptyBoard]);\r\n    const [winningSquares, setWinningSquares] = useState<number[][] | null>(null);\r\n\r\n    const setPiece = (col: number, row: number) => {\r\n        const nextBoard = [...board];\r\n        nextBoard[col][row] = currentXorO();\r\n        setNextMove();\r\n        setBoard(nextBoard);\r\n    }\r\n\r\n    const getWinningCombo = useCallback((): number[][] | null => {\r\n\r\n        if (board[2][2] && (board[0][0] && board[0][0] === board[1][1] && board[1][1] === board[2][2]))\r\n            return [[0, 0], [1, 1], [2, 2]];\r\n        else if (board[2][0] && board[0][2] === board[1][1] && board[1][1] === board[2][0])\r\n            return [[0, 2], [1, 1], [2, 0]];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            if (board[i][0] && board[i][0] === board[i][1] && board[i][1] === board[i][2]) {\r\n                return [[i, 0], [i, 1], [i, 2]];\r\n            }\r\n        }\r\n\r\n        for (let j = 0; j < 3; j++)\r\n            if (board[0][j] && board[0][j] === board[1][j] && board[1][j] === board[2][j]) {\r\n                return [[0, j], [1, j], [2, j]];\r\n            }\r\n\r\n        return null;\r\n    }, [board])\r\n\r\n    useEffect(() => {\r\n        setWinningSquares(getWinningCombo);\r\n    }, [getWinningCombo]);\r\n\r\n    const didWin = useCallback((): XorO | null => {\r\n        return winningSquares ? board[winningSquares[0][0]][winningSquares[0][1]] : null;\r\n    }, [board, winningSquares])\r\n\r\n    const memoizedDidWin = useMemo<XorO | null>(() => didWin(), [didWin])\r\n\r\n\r\n    return (\r\n        <>\r\n            {memoizedDidWin ? <h1>** {memoizedDidWin} Won**</h1> :\r\n                <h1 data-testid='turn'>Turn {currentXorO()}</h1>\r\n            }\r\n            <div className=\"game-board\">\r\n                {\r\n                    board.map((row, i) =>\r\n                        row.map((_, j) => <div key={`row_${i}_${j}`}  data-testid={`row-${i}-${j}`}\r\n                            className={winningSquares?.some(([a, b]) => a === i && b === j) ? \"box box__winning\" : \"box\"}>\r\n                            <Spot row={i} column={j} spotValue={board[i][j]} setPiece={() => setPiece(i, j)} didWin={() => memoizedDidWin} />\r\n                        </div>\r\n                        )\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <Button className='button-space' color=\"warning\" onClick={() => setBoard([...emptyBoard])\r\n            }>Reset</Button>\r\n        </>\r\n    )\r\n}\r\nexport default TicTacToe;","import { useState } from \"react\";\r\nimport { XorO } from \"../AppTypes/AppTypes\";\r\n\r\nexport function useXorO(): [() => XorO ,() => void] {\r\n    const [count, setCount] = useState<number>(0);  \r\n    const currentXorO = ():XorO => count % 2 === 0 ? 'X' : 'O';\r\n    const SetNextMove = ():void => setCount(count+1);\r\n\r\n    return [currentXorO, SetNextMove];\r\n}\r\n\r\n\r\n\r\n"],"names":["Spot","_ref","row","column","spotValue","didWin","setPiece","_jsx","_Fragment","children","Button","concat","className","variant","onClick","emptyBoard","_useXorO","_useState","useState","_useState2","_slicedToArray","count","setCount","useXorO","_useXorO2","currentXorO","setNextMove","board","setBoard","_useState3","_useState4","winningSquares","setWinningSquares","getWinningCombo","useCallback","i","j","useEffect","memoizedDidWin","useMemo","_jsxs","map","_","some","_ref2","a","b","col","nextBoard","_toConsumableArray","color"],"sourceRoot":""}